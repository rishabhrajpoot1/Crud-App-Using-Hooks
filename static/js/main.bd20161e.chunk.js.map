{"version":3,"sources":["Context.js","Component/UserInterface.js","Component/App.js","index.js"],"names":["UserContext","React","createContext","UserProvider","Provider","Consumer","UserInterface","user","useContext","data","JSON","parse","localStorage","getItem","console","log","map","details","i","contentEditable","name","username","onClick","handleDelete","App","useState","setName","userName","setUserName","userDelete","setUserDelete","useEffect","value","type","placeholder","onChange","event","target","preventDefault","localData","setItem","stringify","array","splice","ReactDOM","render","document","getElementById"],"mappings":"gKAEMA,EAAcC,IAAMC,gBAEbC,EAAeH,EAAYI,SAGzBJ,GAFaA,EAAYK,SAEzBL,G,OCYAM,MAjBf,WAA0B,IAAD,EACjBC,EAAOC,qBAAWR,GAClBS,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,GAEzD,OADAC,QAAQC,IAAIN,EAAMF,EAAM,QAEtB,0CACGA,QADH,IACGA,GADH,UACGA,EAAME,YADT,aACG,EAAYO,KAAI,SAACC,EAASC,GAAV,OACf,gCACE,uBAAOC,iBAAiB,EAAxB,SAA+BF,EAAQG,OACvC,uBAAOD,iBAAiB,EAAxB,SAA+BF,EAAQI,WACvC,sBAAMC,QAAS,kBAAMf,EAAKgB,aAAaL,IAAvC,wBCiDKM,MA1Df,WAAgB,IAAD,EACSC,mBAAS,IADlB,mBACRL,EADQ,KACFM,EADE,OAEiBD,mBAAS,IAF1B,mBAERE,EAFQ,KAEEC,EAFF,OAGqBH,oBAAS,GAH9B,mBAGRI,EAHQ,KAGIC,EAHJ,KA4Bb,OATAC,qBAAU,cAAU,CAACF,IAUnB,qCACE,iCACE,uBACEG,MAAOZ,EACPa,KAAK,OACLC,YAAY,iBACZC,SAAU,SAACC,GAAD,OAAWV,EAAQU,EAAMC,OAAOL,QAC1CZ,KAAK,SAEP,uBACEY,MAAOL,EACPM,KAAK,OACLC,YAAY,qBACZC,SAAU,SAACC,GAAD,OAAWR,EAAYQ,EAAMC,OAAOL,QAC9CZ,KAAK,aAEP,uBAAOE,QAxCb,SAAkBc,GAEhB,GADAA,EAAME,iBACO,KAATlB,GAA4B,KAAbO,EAAiB,CAClC,IAAMY,EAAY7B,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,GAE9DD,aAAa4B,QACX,OACA9B,KAAK+B,UAAL,sBAAmBF,GAAnB,CAA8B,CAAElB,SAAUM,EAAUP,KAAMA,OAG5DM,EAAQ,IACRE,EAAY,MA6BgBI,MAAM,SAASC,KAAK,cAEhD,cAAC9B,EAAD,CACE6B,MAAO,CACLvB,KAAMC,KAAKC,MAAMC,aAAaC,QAAQ,SACtCU,aA9BR,SAAsBL,GACpBJ,QAAQC,IAAIG,GACZ,IAAIwB,EAAQhC,KAAKC,MAAMC,aAAaC,QAAQ,SAC5C6B,EAAMC,OAAOzB,EAAG,GAEhBN,aAAa4B,QAAQ,OAAQ9B,KAAK+B,UAAL,YAAmBC,KAChDZ,GAAeD,KAqBb,SAME,cAAC,EAAD,UCpDRe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bd20161e.chunk.js","sourcesContent":["import React from 'react';\n\nconst UserContext = React.createContext();\n\nexport const UserProvider = UserContext.Provider;\nexport const UserConsumer = UserContext.Consumer;\n\nexport default UserContext;\n","import React, { useContext } from 'react';\nimport UserContext from '../Context';\nfunction UserInterface() {\n  const user = useContext(UserContext);\n  const data = JSON.parse(localStorage.getItem('data')) || [];\n  console.log(data, user, 'data');\n  return (\n    <>\n      {user?.data?.map((details, i) => (\n        <div>\n          <label contentEditable={true}>{details.name}</label>\n          <label contentEditable={true}>{details.username}</label>\n          <span onClick={() => user.handleDelete(i)}>X</span>\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default UserInterface;\n","import React, { useState, useEffect } from 'react';\nimport { UserProvider } from '../Context';\nimport UserInterface from './UserInterface';\nfunction App() {\n  let [name, setName] = useState('');\n  let [userName, setUserName] = useState('');\n  let [userDelete, setUserDelete] = useState(true);\n\n  function onSubmit(event) {\n    event.preventDefault();\n    if (name !== '' && userName !== '') {\n      const localData = JSON.parse(localStorage.getItem('data')) || [];\n\n      localStorage.setItem(\n        'data',\n        JSON.stringify([...localData, { username: userName, name: name }])\n      );\n\n      setName('');\n      setUserName('');\n    }\n  }\n  useEffect(() => {}, [userDelete]);\n  function handleDelete(i) {\n    console.log(i);\n    let array = JSON.parse(localStorage.getItem('data'));\n    array.splice(i, 1);\n\n    localStorage.setItem('data', JSON.stringify([...array]));\n    setUserDelete(!userDelete);\n  }\n  return (\n    <>\n      <form>\n        <input\n          value={name}\n          type='text'\n          placeholder='enter the name'\n          onChange={(event) => setName(event.target.value)}\n          name='name'\n        />\n        <input\n          value={userName}\n          type='text'\n          placeholder='enter the username'\n          onChange={(event) => setUserName(event.target.value)}\n          name='username'\n        />\n        <input onClick={onSubmit} value='submit' type='submit' />\n      </form>\n      <UserProvider\n        value={{\n          data: JSON.parse(localStorage.getItem('data')),\n          handleDelete: handleDelete,\n        }}\n      >\n        <UserInterface />\n      </UserProvider>\n    </>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Component/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}